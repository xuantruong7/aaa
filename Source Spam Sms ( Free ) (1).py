import telebot
import bs4,  base64
import os
import subprocess
import psutil
import sqlite3
import hashlib
import threading
import time
import requests
import datetime
api_bot = "6578917837:AAE_aFNfulvYw3clA94XZigAG0jdBQJZ48Y" #Nh·∫≠p api Bot C·ªßa Telegram
processes = []
bot = telebot.TeleBot(api_bot)
allowed_users = []
ADMIN_ID = 5884057707 # id Admin ƒë·ªÉ s·ª≠ d·ª•ng quy·ªÅn h√†nh
Group_Id_Chat = -1002170354953  # L·∫•y Id Group M√† B·∫°n Mu·ªën Bot Ho·∫°t ƒê·ªông Tr√™n ƒê√≥


connection = sqlite3.connect('user_data.db')
cursor = connection.cursor()

# T·∫°o b·∫£ng ng∆∞·ªùi d√πng n·∫øu ch∆∞a t·ªìn t·∫°i
cursor.execute('''
    CREATE TABLE IF NOT EXISTS users (
        user_id INTEGER PRIMARY KEY,
        expiration_time TEXT
    )
''')
connection.commit()

def TimeStamp():
    now = str(datetime.date.today())
    return now

def load_users_from_database():
    cursor.execute('SELECT user_id, expiration_time FROM users')
    rows = cursor.fetchall()
    for row in rows:
        user_id = row[0]
        expiration_time = datetime.datetime.strptime(row[1], '%Y-%m-%d %H:%M:%S')
        if expiration_time > datetime.datetime.now():
            allowed_users.append(user_id)

def save_user_to_database(connection, user_id, expiration_time):
    cursor = connection.cursor()
    cursor.execute('''
        INSERT OR REPLACE INTO users (user_id, expiration_time)
        VALUES (?, ?)
    ''', (user_id, expiration_time.strftime('%Y-%m-%d %H:%M:%S')))
    connection.commit()
@bot.message_handler(commands=['add'])
def add_user(message):
    admin_id = message.from_user.id
    if admin_id != ADMIN_ID:
        bot.reply_to(message, 'B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y.')
        return

    message_parts = message.text.split()
    if len(message_parts) == 1:
        bot.reply_to(message, 'Vui l√≤ng nh·∫≠p ID ng∆∞·ªùi d√πng.')
        return
    if len(message_parts) < 3:
        bot.reply_to(message, 'Vui l√≤ng nh·∫≠p ƒë·ªß th√¥ng tin.')
        return

    user_id = message_parts[1]
    ngay = int(message_parts[2])

    allowed_users.append(user_id)
    expiration_time = datetime.datetime.now() + datetime.timedelta(days=int(ngay))
    connection = sqlite3.connect('user_data.db')
    save_user_to_database(connection, user_id, expiration_time)
    connection.close()

    bot.reply_to(message, 'Add Success Vip\nId_User : {user_id}\nDay : {ngay}\n')

load_users_from_database()
@bot.message_handler(commands=['vipspam'])
def lqm_sms(message):
    user_id = message.from_user.id
    if user_id not in allowed_users:
        bot.reply_to(message, text='B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y!')
        return
    if len(message.text.split()) == 1:
        bot.reply_to(message, 'Enter Phone Number')
        return

    phone_number = message.text.split()[1]
    if not phone_number.isnumeric():
        bot.reply_to(message, 'Phone Number Not Working')
        return

    if phone_number in ['113','911','114','115','1800']:
        # S·ªë ƒëi·ªán tho·∫°i n·∫±m trong danh s√°ch c·∫•m
        bot.reply_to(message,"LOL ! NO SPAM")
        return        
        bot.reply_to(message, f'''‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îì
‚î£‚û§ ‚äÇüöÄ‚äÉAttack Success‚äÇüöÄ‚äÉ
‚î£‚û§Commands : VIP
‚î£‚û§Attack By : 
‚î£‚û§Bot : 
‚î£‚û§Attack Type : SMS
‚î£‚û§Phone Number : {phone_number} üì±
‚î£‚û§Attack Delay : 200 Delay
‚î£‚û§Admin : 
‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚û§
''')

@bot.message_handler(commands=['spam'])
def sms(message):
    if len(message.text.split()) == 1:
        bot.reply_to(message, 'Please Enter Phone Number') 
        return
      
    phone_number = message.text.split()[1]       
    if not phone_number.isdigit() or len(phone_number) != 10:
        bot.reply_to(message, 'Please Enter 10 Digits Phone Number')         
        return

    file_path = os.path.join(os.getcwd(), "smsfree.py")
    process = subprocess.Popen(["python", file_path, phone_number, "50"])
    processes.append(process)

    bot.reply_to(message, f'''‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îì
‚î£‚û§Bot : @truongdeptrai7
‚î£‚û§Attack Type : SMS
‚î£‚û§Phone Number : {phone_number} üì±
‚î£‚û§Attack Deply : 50 Deply
‚î£‚û§Admin :  @truongdeptrai7
‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚û§
''')



    
    





    
@bot.message_handler(func=lambda message: message.chat.id != Group_Id_Chat)
def handle_message(message):
    # G·ª≠i th√¥ng b√°o n·∫øu bot nh·∫≠n ƒë∆∞·ª£c tin nh·∫Øn t·ª´ m·ªôt nh√≥m kh√°c
    bot.reply_to(message, "Bot Working in Group[https://t.me/concunha] AD @truongdeptrai7 ")









    
bot.message_handler(commands=['status'])
def status(message):
    user_id = message.from_user.id
    if user_id != ADMIN_ID:
        bot.reply_to(message, 'User Does Not Have Authority To Use This Command.')
        return
    if user_id not in allowed_users:
        bot.reply_to(message, text='User Does Not Have Authority To Use This Command!')
        return
    process_count = len(processes)
    bot.reply_to(message, 'Number of running processes {process_count}.')

@bot.message_handler(commands=['restart'])
def restart(message):
    user_id = message.from_user.id
    if user_id != ADMIN_ID:
        bot.reply_to(message, 'User Does Not Have Authority To Use This Command.')
        return

    bot.reply_to(message, 'Please Wait Bot Reset....')
    time.sleep(2)
    python = sys.executable
    os.execl(python, python, *sys.argv)

@bot.message_handler(commands=['stop'])
def stop(message):
    user_id = message.from_user.id
    if user_id != ADMIN_ID:
        bot.reply_to(message, 'User Does Not Have Authority To Use This Command.')
        return

    bot.reply_to(message, 'Please Wait Bot Stop....')
    time.sleep(2)
    bot.stop_polling()
@bot.message_handler(commands=['help','start'])
def help(message):
    help_text = '''
‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îì
‚î£‚û§ Commands Spam
‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚û§
‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îì
‚î£‚û§ /spam : [ Commands Free] /spam + phone 
‚î£‚û§ /vipspam : [ Commands Vip ] /vipspam + phone.
‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚û§
‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îì
‚î£‚û§ Command Admin
‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚û§
‚î£‚û§/status : 
‚î£‚û§/restart : Reset Bot
‚î£‚û§/stop : Stop Run Bot
‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚û§
'''
    bot.reply_to(message, help_text)
    
    
    
    
# Kh·ªüi t·∫°o bot ·ª©ng d·ª•ng c·ªßa b·∫°n

# L·ªánh "/start" ƒë·ªÉ b·∫Øt ƒë·∫ßu theo d√µi th·ªùi gian


    

bot.polling()

    
    
    
    
    

